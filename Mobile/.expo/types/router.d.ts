/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/markets` | `/markets`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/portfolio` | `/portfolio`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/watchlist` | `/watchlist`; params?: Router.UnknownInputParams; } | { pathname: `/components/StockDetailScreen`; params?: Router.UnknownInputParams; } | { pathname: `/context/AuthContext`; params?: Router.UnknownInputParams; } | { pathname: `/context/ThemeContext`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `/stock/[symbol]`, params: Router.UnknownInputParams & { symbol: string | number; } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/markets` | `/markets`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/portfolio` | `/portfolio`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/watchlist` | `/watchlist`; params?: Router.UnknownOutputParams; } | { pathname: `/components/StockDetailScreen`; params?: Router.UnknownOutputParams; } | { pathname: `/context/AuthContext`; params?: Router.UnknownOutputParams; } | { pathname: `/context/ThemeContext`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } } | { pathname: `/stock/[symbol]`, params: Router.UnknownOutputParams & { symbol: string; } };
      href: Router.RelativePathString | Router.ExternalPathString | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/markets${`?${string}` | `#${string}` | ''}` | `/markets${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/portfolio${`?${string}` | `#${string}` | ''}` | `/portfolio${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/profile${`?${string}` | `#${string}` | ''}` | `/profile${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/watchlist${`?${string}` | `#${string}` | ''}` | `/watchlist${`?${string}` | `#${string}` | ''}` | `/components/StockDetailScreen${`?${string}` | `#${string}` | ''}` | `/context/AuthContext${`?${string}` | `#${string}` | ''}` | `/context/ThemeContext${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/markets` | `/markets`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/portfolio` | `/portfolio`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/watchlist` | `/watchlist`; params?: Router.UnknownInputParams; } | { pathname: `/components/StockDetailScreen`; params?: Router.UnknownInputParams; } | { pathname: `/context/AuthContext`; params?: Router.UnknownInputParams; } | { pathname: `/context/ThemeContext`; params?: Router.UnknownInputParams; } | `/+not-found` | `/stock/${Router.SingleRoutePart<T>}` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `/stock/[symbol]`, params: Router.UnknownInputParams & { symbol: string | number; } };
    }
  }
}
